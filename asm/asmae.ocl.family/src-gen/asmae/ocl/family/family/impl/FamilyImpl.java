/**
 * generated by Xtext 2.25.0
 */
package asmae.ocl.family.family.impl;

import asmae.ocl.family.family.Family;
import asmae.ocl.family.family.FamilyPackage;
import asmae.ocl.family.family.Member;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Family</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link asmae.ocl.family.family.impl.FamilyImpl#getLastName <em>Last Name</em>}</li>
 *   <li>{@link asmae.ocl.family.family.impl.FamilyImpl#getFather <em>Father</em>}</li>
 *   <li>{@link asmae.ocl.family.family.impl.FamilyImpl#getMother <em>Mother</em>}</li>
 *   <li>{@link asmae.ocl.family.family.impl.FamilyImpl#getSons <em>Sons</em>}</li>
 *   <li>{@link asmae.ocl.family.family.impl.FamilyImpl#getDaughters <em>Daughters</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FamilyImpl extends MinimalEObjectImpl.Container implements Family
{
  /**
   * The default value of the '{@link #getLastName() <em>Last Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLastName()
   * @generated
   * @ordered
   */
  protected static final String LAST_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLastName() <em>Last Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLastName()
   * @generated
   * @ordered
   */
  protected String lastName = LAST_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getFather() <em>Father</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFather()
   * @generated
   * @ordered
   */
  protected Member father;

  /**
   * The cached value of the '{@link #getMother() <em>Mother</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMother()
   * @generated
   * @ordered
   */
  protected Member mother;

  /**
   * The cached value of the '{@link #getSons() <em>Sons</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSons()
   * @generated
   * @ordered
   */
  protected EList<Member> sons;

  /**
   * The cached value of the '{@link #getDaughters() <em>Daughters</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDaughters()
   * @generated
   * @ordered
   */
  protected EList<Member> daughters;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FamilyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FamilyPackage.Literals.FAMILY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLastName()
  {
    return lastName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLastName(String newLastName)
  {
    String oldLastName = lastName;
    lastName = newLastName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FamilyPackage.FAMILY__LAST_NAME, oldLastName, lastName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Member getFather()
  {
    if (father != null && father.eIsProxy())
    {
      InternalEObject oldFather = (InternalEObject)father;
      father = (Member)eResolveProxy(oldFather);
      if (father != oldFather)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FamilyPackage.FAMILY__FATHER, oldFather, father));
      }
    }
    return father;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Member basicGetFather()
  {
    return father;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFather(Member newFather)
  {
    Member oldFather = father;
    father = newFather;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FamilyPackage.FAMILY__FATHER, oldFather, father));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Member getMother()
  {
    if (mother != null && mother.eIsProxy())
    {
      InternalEObject oldMother = (InternalEObject)mother;
      mother = (Member)eResolveProxy(oldMother);
      if (mother != oldMother)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FamilyPackage.FAMILY__MOTHER, oldMother, mother));
      }
    }
    return mother;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Member basicGetMother()
  {
    return mother;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMother(Member newMother)
  {
    Member oldMother = mother;
    mother = newMother;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FamilyPackage.FAMILY__MOTHER, oldMother, mother));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Member> getSons()
  {
    if (sons == null)
    {
      sons = new EObjectContainmentEList<Member>(Member.class, this, FamilyPackage.FAMILY__SONS);
    }
    return sons;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Member> getDaughters()
  {
    if (daughters == null)
    {
      daughters = new EObjectContainmentEList<Member>(Member.class, this, FamilyPackage.FAMILY__DAUGHTERS);
    }
    return daughters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FamilyPackage.FAMILY__SONS:
        return ((InternalEList<?>)getSons()).basicRemove(otherEnd, msgs);
      case FamilyPackage.FAMILY__DAUGHTERS:
        return ((InternalEList<?>)getDaughters()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FamilyPackage.FAMILY__LAST_NAME:
        return getLastName();
      case FamilyPackage.FAMILY__FATHER:
        if (resolve) return getFather();
        return basicGetFather();
      case FamilyPackage.FAMILY__MOTHER:
        if (resolve) return getMother();
        return basicGetMother();
      case FamilyPackage.FAMILY__SONS:
        return getSons();
      case FamilyPackage.FAMILY__DAUGHTERS:
        return getDaughters();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FamilyPackage.FAMILY__LAST_NAME:
        setLastName((String)newValue);
        return;
      case FamilyPackage.FAMILY__FATHER:
        setFather((Member)newValue);
        return;
      case FamilyPackage.FAMILY__MOTHER:
        setMother((Member)newValue);
        return;
      case FamilyPackage.FAMILY__SONS:
        getSons().clear();
        getSons().addAll((Collection<? extends Member>)newValue);
        return;
      case FamilyPackage.FAMILY__DAUGHTERS:
        getDaughters().clear();
        getDaughters().addAll((Collection<? extends Member>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FamilyPackage.FAMILY__LAST_NAME:
        setLastName(LAST_NAME_EDEFAULT);
        return;
      case FamilyPackage.FAMILY__FATHER:
        setFather((Member)null);
        return;
      case FamilyPackage.FAMILY__MOTHER:
        setMother((Member)null);
        return;
      case FamilyPackage.FAMILY__SONS:
        getSons().clear();
        return;
      case FamilyPackage.FAMILY__DAUGHTERS:
        getDaughters().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FamilyPackage.FAMILY__LAST_NAME:
        return LAST_NAME_EDEFAULT == null ? lastName != null : !LAST_NAME_EDEFAULT.equals(lastName);
      case FamilyPackage.FAMILY__FATHER:
        return father != null;
      case FamilyPackage.FAMILY__MOTHER:
        return mother != null;
      case FamilyPackage.FAMILY__SONS:
        return sons != null && !sons.isEmpty();
      case FamilyPackage.FAMILY__DAUGHTERS:
        return daughters != null && !daughters.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (lastName: ");
    result.append(lastName);
    result.append(')');
    return result.toString();
  }

} //FamilyImpl
