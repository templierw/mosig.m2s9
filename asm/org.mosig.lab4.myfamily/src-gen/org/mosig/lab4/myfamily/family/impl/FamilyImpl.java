/**
 * generated by Xtext 2.25.0
 */
package org.mosig.lab4.myfamily.family.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.mosig.lab4.myfamily.family.Family;
import org.mosig.lab4.myfamily.family.FamilyPackage;
import org.mosig.lab4.myfamily.family.Member;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Family</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.mosig.lab4.myfamily.family.impl.FamilyImpl#getSurname <em>Surname</em>}</li>
 *   <li>{@link org.mosig.lab4.myfamily.family.impl.FamilyImpl#getF <em>F</em>}</li>
 *   <li>{@link org.mosig.lab4.myfamily.family.impl.FamilyImpl#getM <em>M</em>}</li>
 *   <li>{@link org.mosig.lab4.myfamily.family.impl.FamilyImpl#getS <em>S</em>}</li>
 *   <li>{@link org.mosig.lab4.myfamily.family.impl.FamilyImpl#getD <em>D</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FamilyImpl extends MinimalEObjectImpl.Container implements Family
{
  /**
   * The default value of the '{@link #getSurname() <em>Surname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSurname()
   * @generated
   * @ordered
   */
  protected static final String SURNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSurname() <em>Surname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSurname()
   * @generated
   * @ordered
   */
  protected String surname = SURNAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getF() <em>F</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getF()
   * @generated
   * @ordered
   */
  protected Member f;

  /**
   * The cached value of the '{@link #getM() <em>M</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getM()
   * @generated
   * @ordered
   */
  protected Member m;

  /**
   * The cached value of the '{@link #getS() <em>S</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getS()
   * @generated
   * @ordered
   */
  protected EList<Member> s;

  /**
   * The cached value of the '{@link #getD() <em>D</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getD()
   * @generated
   * @ordered
   */
  protected EList<Member> d;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FamilyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FamilyPackage.Literals.FAMILY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSurname()
  {
    return surname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSurname(String newSurname)
  {
    String oldSurname = surname;
    surname = newSurname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FamilyPackage.FAMILY__SURNAME, oldSurname, surname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Member getF()
  {
    if (f != null && f.eIsProxy())
    {
      InternalEObject oldF = (InternalEObject)f;
      f = (Member)eResolveProxy(oldF);
      if (f != oldF)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FamilyPackage.FAMILY__F, oldF, f));
      }
    }
    return f;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Member basicGetF()
  {
    return f;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setF(Member newF)
  {
    Member oldF = f;
    f = newF;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FamilyPackage.FAMILY__F, oldF, f));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Member getM()
  {
    if (m != null && m.eIsProxy())
    {
      InternalEObject oldM = (InternalEObject)m;
      m = (Member)eResolveProxy(oldM);
      if (m != oldM)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FamilyPackage.FAMILY__M, oldM, m));
      }
    }
    return m;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Member basicGetM()
  {
    return m;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setM(Member newM)
  {
    Member oldM = m;
    m = newM;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FamilyPackage.FAMILY__M, oldM, m));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Member> getS()
  {
    if (s == null)
    {
      s = new EObjectContainmentEList<Member>(Member.class, this, FamilyPackage.FAMILY__S);
    }
    return s;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Member> getD()
  {
    if (d == null)
    {
      d = new EObjectContainmentEList<Member>(Member.class, this, FamilyPackage.FAMILY__D);
    }
    return d;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FamilyPackage.FAMILY__S:
        return ((InternalEList<?>)getS()).basicRemove(otherEnd, msgs);
      case FamilyPackage.FAMILY__D:
        return ((InternalEList<?>)getD()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FamilyPackage.FAMILY__SURNAME:
        return getSurname();
      case FamilyPackage.FAMILY__F:
        if (resolve) return getF();
        return basicGetF();
      case FamilyPackage.FAMILY__M:
        if (resolve) return getM();
        return basicGetM();
      case FamilyPackage.FAMILY__S:
        return getS();
      case FamilyPackage.FAMILY__D:
        return getD();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FamilyPackage.FAMILY__SURNAME:
        setSurname((String)newValue);
        return;
      case FamilyPackage.FAMILY__F:
        setF((Member)newValue);
        return;
      case FamilyPackage.FAMILY__M:
        setM((Member)newValue);
        return;
      case FamilyPackage.FAMILY__S:
        getS().clear();
        getS().addAll((Collection<? extends Member>)newValue);
        return;
      case FamilyPackage.FAMILY__D:
        getD().clear();
        getD().addAll((Collection<? extends Member>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FamilyPackage.FAMILY__SURNAME:
        setSurname(SURNAME_EDEFAULT);
        return;
      case FamilyPackage.FAMILY__F:
        setF((Member)null);
        return;
      case FamilyPackage.FAMILY__M:
        setM((Member)null);
        return;
      case FamilyPackage.FAMILY__S:
        getS().clear();
        return;
      case FamilyPackage.FAMILY__D:
        getD().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FamilyPackage.FAMILY__SURNAME:
        return SURNAME_EDEFAULT == null ? surname != null : !SURNAME_EDEFAULT.equals(surname);
      case FamilyPackage.FAMILY__F:
        return f != null;
      case FamilyPackage.FAMILY__M:
        return m != null;
      case FamilyPackage.FAMILY__S:
        return s != null && !s.isEmpty();
      case FamilyPackage.FAMILY__D:
        return d != null && !d.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (surname: ");
    result.append(surname);
    result.append(')');
    return result.toString();
  }

} //FamilyImpl
